/*
 * generated by Xtext 2.26.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package assignment_2_ssda.xtext_ml.ass2.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package assignment_2_ssda.xtext_ml.ass2.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import assignment_2_ssda.xtext_ml.ass2.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Diabetes_Prediction_System";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDiabetes_Prediction_System
entryRuleDiabetes_Prediction_System returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiabetes_Prediction_SystemRule()); }
	iv_ruleDiabetes_Prediction_System=ruleDiabetes_Prediction_System
	{ $current=$iv_ruleDiabetes_Prediction_System.current; }
	EOF;

// Rule Diabetes_Prediction_System
ruleDiabetes_Prediction_System returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Diabetes_prediction_System:'
		{
			newLeafNode(otherlv_0, grammarAccess.getDiabetes_Prediction_SystemAccess().getDiabetes_prediction_SystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDiabetes_Prediction_SystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDiabetes_Prediction_SystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDiabetes_Prediction_SystemAccess().getMedicinesMedicinesParserRuleCall_2_0());
				}
				lv_medicines_2_0=ruleMedicines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiabetes_Prediction_SystemRule());
					}
					add(
						$current,
						"medicines",
						lv_medicines_2_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Medicines");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDiabetes_Prediction_SystemAccess().getSymptomSymptomParserRuleCall_3_0());
				}
				lv_symptom_3_0=ruleSymptom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiabetes_Prediction_SystemRule());
					}
					add(
						$current,
						"symptom",
						lv_symptom_3_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Symptom");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDiabetes_Prediction_SystemAccess().getDoctorsDoctorParserRuleCall_4_0());
				}
				lv_doctors_4_0=ruleDoctor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiabetes_Prediction_SystemRule());
					}
					add(
						$current,
						"doctors",
						lv_doctors_4_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Doctor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDiabetes_Prediction_SystemAccess().getPatientPatientParserRuleCall_5_0());
				}
				lv_patient_5_0=rulePatient
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiabetes_Prediction_SystemRule());
					}
					add(
						$current,
						"patient",
						lv_patient_5_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Patient");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDiabetes_Prediction_SystemAccess().getMachine_learning_AlgorithmsMachine_learning_AlgorithmsParserRuleCall_6_0());
				}
				lv_Machine_learning_Algorithms_6_0=ruleMachine_learning_Algorithms
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiabetes_Prediction_SystemRule());
					}
					add(
						$current,
						"Machine_learning_Algorithms",
						lv_Machine_learning_Algorithms_6_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Machine_learning_Algorithms");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleMedicines
entryRuleMedicines returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMedicinesRule()); }
	iv_ruleMedicines=ruleMedicines
	{ $current=$iv_ruleMedicines.current; }
	EOF;

// Rule Medicines
ruleMedicines returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Medicines'
		{
			newLeafNode(otherlv_0, grammarAccess.getMedicinesAccess().getMedicinesKeyword_0());
		}
		(
			(
				lv_Medicine_name_1_0=RULE_ID
				{
					newLeafNode(lv_Medicine_name_1_0, grammarAccess.getMedicinesAccess().getMedicine_nameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMedicinesRule());
					}
					setWithLastConsumed(
						$current,
						"Medicine_name",
						lv_Medicine_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Medicine_dossage:'
		{
			newLeafNode(otherlv_2, grammarAccess.getMedicinesAccess().getMedicine_dossageKeyword_2());
		}
		(
			(
				lv_Medicine_dossage_3_0=RULE_STRING
				{
					newLeafNode(lv_Medicine_dossage_3_0, grammarAccess.getMedicinesAccess().getMedicine_dossageSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMedicinesRule());
					}
					setWithLastConsumed(
						$current,
						"Medicine_dossage",
						lv_Medicine_dossage_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSymptom
entryRuleSymptom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSymptomRule()); }
	iv_ruleSymptom=ruleSymptom
	{ $current=$iv_ruleSymptom.current; }
	EOF;

// Rule Symptom
ruleSymptom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getPolyuriaParserRuleCall_0());
		}
		this_Polyuria_0=rulePolyuria
		{
			$current = $this_Polyuria_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getPolydipsiaParserRuleCall_1());
		}
		this_Polydipsia_1=rulePolydipsia
		{
			$current = $this_Polydipsia_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getSudden_weight_lossParserRuleCall_2());
		}
		this_sudden_weight_loss_2=rulesudden_weight_loss
		{
			$current = $this_sudden_weight_loss_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getPolyphagiaParserRuleCall_3());
		}
		this_Polyphagia_3=rulePolyphagia
		{
			$current = $this_Polyphagia_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getGenital_thrushParserRuleCall_4());
		}
		this_Genital_thrush_4=ruleGenital_thrush
		{
			$current = $this_Genital_thrush_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getVisual_blurringParserRuleCall_5());
		}
		this_visual_blurring_5=rulevisual_blurring
		{
			$current = $this_visual_blurring_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getItchingParserRuleCall_6());
		}
		this_Itching_6=ruleItching
		{
			$current = $this_Itching_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getIrritabilityParserRuleCall_7());
		}
		this_Irritability_7=ruleIrritability
		{
			$current = $this_Irritability_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getDelayed_healingParserRuleCall_8());
		}
		this_delayed_healing_8=ruledelayed_healing
		{
			$current = $this_delayed_healing_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getPartial_paresisParserRuleCall_9());
		}
		this_partial_paresis_9=rulepartial_paresis
		{
			$current = $this_partial_paresis_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getMuscle_stiffnessParserRuleCall_10());
		}
		this_muscle_stiffness_10=rulemuscle_stiffness
		{
			$current = $this_muscle_stiffness_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getAlopeciaParserRuleCall_11());
		}
		this_Alopecia_11=ruleAlopecia
		{
			$current = $this_Alopecia_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSymptomAccess().getObesityParserRuleCall_12());
		}
		this_Obesity_12=ruleObesity
		{
			$current = $this_Obesity_12.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePolyuria
entryRulePolyuria returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolyuriaRule()); }
	iv_rulePolyuria=rulePolyuria
	{ $current=$iv_rulePolyuria.current; }
	EOF;

// Rule Polyuria
rulePolyuria returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Polyuria'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolyuriaAccess().getPolyuriaKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getPolyuriaAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPolyuriaAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolyuriaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePolydipsia
entryRulePolydipsia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolydipsiaRule()); }
	iv_rulePolydipsia=rulePolydipsia
	{ $current=$iv_rulePolydipsia.current; }
	EOF;

// Rule Polydipsia
rulePolydipsia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Polydipsia'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolydipsiaAccess().getPolydipsiaKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getPolydipsiaAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPolydipsiaAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolydipsiaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulesudden_weight_loss
entryRulesudden_weight_loss returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSudden_weight_lossRule()); }
	iv_rulesudden_weight_loss=rulesudden_weight_loss
	{ $current=$iv_rulesudden_weight_loss.current; }
	EOF;

// Rule sudden_weight_loss
rulesudden_weight_loss returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sudden_weight_loss'
		{
			newLeafNode(otherlv_0, grammarAccess.getSudden_weight_lossAccess().getSudden_weight_lossKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getSudden_weight_lossAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSudden_weight_lossAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSudden_weight_lossRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulePolyphagia
entryRulePolyphagia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolyphagiaRule()); }
	iv_rulePolyphagia=rulePolyphagia
	{ $current=$iv_rulePolyphagia.current; }
	EOF;

// Rule Polyphagia
rulePolyphagia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Polyphagia'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolyphagiaAccess().getPolyphagiaKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getPolyphagiaAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPolyphagiaAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPolyphagiaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleGenital_thrush
entryRuleGenital_thrush returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGenital_thrushRule()); }
	iv_ruleGenital_thrush=ruleGenital_thrush
	{ $current=$iv_ruleGenital_thrush.current; }
	EOF;

// Rule Genital_thrush
ruleGenital_thrush returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Genital_thrush'
		{
			newLeafNode(otherlv_0, grammarAccess.getGenital_thrushAccess().getGenital_thrushKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getGenital_thrushAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getGenital_thrushAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGenital_thrushRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulevisual_blurring
entryRulevisual_blurring returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVisual_blurringRule()); }
	iv_rulevisual_blurring=rulevisual_blurring
	{ $current=$iv_rulevisual_blurring.current; }
	EOF;

// Rule visual_blurring
rulevisual_blurring returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='visual_blurring'
		{
			newLeafNode(otherlv_0, grammarAccess.getVisual_blurringAccess().getVisual_blurringKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getVisual_blurringAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getVisual_blurringAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVisual_blurringRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleItching
entryRuleItching returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItchingRule()); }
	iv_ruleItching=ruleItching
	{ $current=$iv_ruleItching.current; }
	EOF;

// Rule Itching
ruleItching returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Itching'
		{
			newLeafNode(otherlv_0, grammarAccess.getItchingAccess().getItchingKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getItchingAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getItchingAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItchingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleIrritability
entryRuleIrritability returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIrritabilityRule()); }
	iv_ruleIrritability=ruleIrritability
	{ $current=$iv_ruleIrritability.current; }
	EOF;

// Rule Irritability
ruleIrritability returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Irritability'
		{
			newLeafNode(otherlv_0, grammarAccess.getIrritabilityAccess().getIrritabilityKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getIrritabilityAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getIrritabilityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIrritabilityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuledelayed_healing
entryRuledelayed_healing returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDelayed_healingRule()); }
	iv_ruledelayed_healing=ruledelayed_healing
	{ $current=$iv_ruledelayed_healing.current; }
	EOF;

// Rule delayed_healing
ruledelayed_healing returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='delayed_healing'
		{
			newLeafNode(otherlv_0, grammarAccess.getDelayed_healingAccess().getDelayed_healingKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getDelayed_healingAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getDelayed_healingAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDelayed_healingRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulepartial_paresis
entryRulepartial_paresis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPartial_paresisRule()); }
	iv_rulepartial_paresis=rulepartial_paresis
	{ $current=$iv_rulepartial_paresis.current; }
	EOF;

// Rule partial_paresis
rulepartial_paresis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='partial_paresis'
		{
			newLeafNode(otherlv_0, grammarAccess.getPartial_paresisAccess().getPartial_paresisKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getPartial_paresisAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getPartial_paresisAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPartial_paresisRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRulemuscle_stiffness
entryRulemuscle_stiffness returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMuscle_stiffnessRule()); }
	iv_rulemuscle_stiffness=rulemuscle_stiffness
	{ $current=$iv_rulemuscle_stiffness.current; }
	EOF;

// Rule muscle_stiffness
rulemuscle_stiffness returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='muscle_stiffness'
		{
			newLeafNode(otherlv_0, grammarAccess.getMuscle_stiffnessAccess().getMuscle_stiffnessKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getMuscle_stiffnessAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getMuscle_stiffnessAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMuscle_stiffnessRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleAlopecia
entryRuleAlopecia returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlopeciaRule()); }
	iv_ruleAlopecia=ruleAlopecia
	{ $current=$iv_ruleAlopecia.current; }
	EOF;

// Rule Alopecia
ruleAlopecia returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Alopecia'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlopeciaAccess().getAlopeciaKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlopeciaAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAlopeciaAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlopeciaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleObesity
entryRuleObesity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObesityRule()); }
	iv_ruleObesity=ruleObesity
	{ $current=$iv_ruleObesity.current; }
	EOF;

// Rule Obesity
ruleObesity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Obesity'
		{
			newLeafNode(otherlv_0, grammarAccess.getObesityAccess().getObesityKeyword_0());
		}
		otherlv_1='name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getObesityAccess().getNameKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getObesityAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObesityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSugar_Test
entryRuleSugar_Test returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSugar_TestRule()); }
	iv_ruleSugar_Test=ruleSugar_Test
	{ $current=$iv_ruleSugar_Test.current; }
	EOF;

// Rule Sugar_Test
ruleSugar_Test returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sugar_test'
		{
			newLeafNode(otherlv_0, grammarAccess.getSugar_TestAccess().getSugar_testKeyword_0());
		}
		otherlv_1='Previous_blood_sugar'
		{
			newLeafNode(otherlv_1, grammarAccess.getSugar_TestAccess().getPrevious_blood_sugarKeyword_1());
		}
		(
			(
				lv_Previous_blood_sugar_2_0=RULE_STRING
				{
					newLeafNode(lv_Previous_blood_sugar_2_0, grammarAccess.getSugar_TestAccess().getPrevious_blood_sugarSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSugar_TestRule());
					}
					setWithLastConsumed(
						$current,
						"Previous_blood_sugar",
						lv_Previous_blood_sugar_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='Current_blood_sugar'
		{
			newLeafNode(otherlv_3, grammarAccess.getSugar_TestAccess().getCurrent_blood_sugarKeyword_3());
		}
		(
			(
				lv_Current_blood_sugar_4_0=RULE_STRING
				{
					newLeafNode(lv_Current_blood_sugar_4_0, grammarAccess.getSugar_TestAccess().getCurrent_blood_sugarSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSugar_TestRule());
					}
					setWithLastConsumed(
						$current,
						"Current_blood_sugar",
						lv_Current_blood_sugar_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleDoctor
entryRuleDoctor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDoctorRule()); }
	iv_ruleDoctor=ruleDoctor
	{ $current=$iv_ruleDoctor.current; }
	EOF;

// Rule Doctor
ruleDoctor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Doctor'
		{
			newLeafNode(otherlv_0, grammarAccess.getDoctorAccess().getDoctorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDoctorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoctorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Doctor_specailization'
		{
			newLeafNode(otherlv_2, grammarAccess.getDoctorAccess().getDoctor_specailizationKeyword_2());
		}
		(
			(
				lv_Doctor_specailization_3_0=RULE_STRING
				{
					newLeafNode(lv_Doctor_specailization_3_0, grammarAccess.getDoctorAccess().getDoctor_specailizationSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDoctorRule());
					}
					setWithLastConsumed(
						$current,
						"Doctor_specailization",
						lv_Doctor_specailization_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDoctorAccess().getMedicinesMedicinesParserRuleCall_4_0());
				}
				lv_medicines_4_0=ruleMedicines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoctorRule());
					}
					add(
						$current,
						"medicines",
						lv_medicines_4_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Medicines");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getDoctorAccess().getSymptomsSymptomParserRuleCall_5_0());
				}
				lv_symptoms_5_0=ruleSymptom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDoctorRule());
					}
					add(
						$current,
						"symptoms",
						lv_symptoms_5_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Symptom");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePatient
entryRulePatient returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatientRule()); }
	iv_rulePatient=rulePatient
	{ $current=$iv_rulePatient.current; }
	EOF;

// Rule Patient
rulePatient returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Patient'
		{
			newLeafNode(otherlv_0, grammarAccess.getPatientAccess().getPatientKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPatientAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='Patient_Gender'
		{
			newLeafNode(otherlv_2, grammarAccess.getPatientAccess().getPatient_GenderKeyword_2());
		}
		(
			(
				lv_Patient_Gender_3_0=RULE_ID
				{
					newLeafNode(lv_Patient_Gender_3_0, grammarAccess.getPatientAccess().getPatient_GenderIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"Patient_Gender",
						lv_Patient_Gender_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='Patient_Age'
		{
			newLeafNode(otherlv_4, grammarAccess.getPatientAccess().getPatient_AgeKeyword_4());
		}
		(
			(
				lv_Patient_Age_5_0=RULE_INT
				{
					newLeafNode(lv_Patient_Age_5_0, grammarAccess.getPatientAccess().getPatient_AgeINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"Patient_Age",
						lv_Patient_Age_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6='Patient_Height'
		{
			newLeafNode(otherlv_6, grammarAccess.getPatientAccess().getPatient_HeightKeyword_6());
		}
		(
			(
				lv_Patient_Height_7_0=RULE_STRING
				{
					newLeafNode(lv_Patient_Height_7_0, grammarAccess.getPatientAccess().getPatient_HeightSTRINGTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"Patient_Height",
						lv_Patient_Height_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_8='Patient_Weight'
		{
			newLeafNode(otherlv_8, grammarAccess.getPatientAccess().getPatient_WeightKeyword_8());
		}
		(
			(
				lv_Patient_Weight_9_0=RULE_STRING
				{
					newLeafNode(lv_Patient_Weight_9_0, grammarAccess.getPatientAccess().getPatient_WeightSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"Patient_Weight",
						lv_Patient_Weight_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='patients_blood_pressure'
		{
			newLeafNode(otherlv_10, grammarAccess.getPatientAccess().getPatients_blood_pressureKeyword_10());
		}
		(
			(
				lv_patient_blood_pressure_11_0=RULE_INT
				{
					newLeafNode(lv_patient_blood_pressure_11_0, grammarAccess.getPatientAccess().getPatient_blood_pressureINTTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"patient_blood_pressure",
						lv_patient_blood_pressure_11_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_12='pulse_rate'
		{
			newLeafNode(otherlv_12, grammarAccess.getPatientAccess().getPulse_rateKeyword_12());
		}
		(
			(
				lv_pulse_rate_13_0=RULE_INT
				{
					newLeafNode(lv_pulse_rate_13_0, grammarAccess.getPatientAccess().getPulse_rateINTTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
					setWithLastConsumed(
						$current,
						"pulse_rate",
						lv_pulse_rate_13_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPatientAccess().getSymptomsSymptomParserRuleCall_14_0());
				}
				lv_symptoms_14_0=ruleSymptom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatientRule());
					}
					add(
						$current,
						"symptoms",
						lv_symptoms_14_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Symptom");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getPatientAccess().getMedicinesMedicinesParserRuleCall_15_0());
				}
				lv_medicines_15_0=ruleMedicines
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatientRule());
					}
					add(
						$current,
						"medicines",
						lv_medicines_15_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Medicines");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPatientAccess().getSugar_testsSugar_TestParserRuleCall_16_0());
				}
				lv_sugar_tests_16_0=ruleSugar_Test
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPatientRule());
					}
					add(
						$current,
						"sugar_tests",
						lv_sugar_tests_16_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Sugar_Test");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_17='doctor'
		{
			newLeafNode(otherlv_17, grammarAccess.getPatientAccess().getDoctorKeyword_17());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatientRule());
					}
				}
				otherlv_18=RULE_ID
				{
					newLeafNode(otherlv_18, grammarAccess.getPatientAccess().getDOCTORSDoctorCrossReference_18_0());
				}
			)
		)+
	)
;

// Entry rule entryRulePredict_diabetes
entryRulePredict_diabetes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPredict_diabetesRule()); }
	iv_rulePredict_diabetes=rulePredict_diabetes
	{ $current=$iv_rulePredict_diabetes.current; }
	EOF;

// Rule Predict_diabetes
rulePredict_diabetes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Predict_diabetes'
		{
			newLeafNode(otherlv_0, grammarAccess.getPredict_diabetesAccess().getPredict_diabetesKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_INT
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPredict_diabetesAccess().getNameINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPredict_diabetesRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleMachine_learning_Algorithms
entryRuleMachine_learning_Algorithms returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMachine_learning_AlgorithmsRule()); }
	iv_ruleMachine_learning_Algorithms=ruleMachine_learning_Algorithms
	{ $current=$iv_ruleMachine_learning_Algorithms.current; }
	EOF;

// Rule Machine_learning_Algorithms
ruleMachine_learning_Algorithms returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMachine_learning_AlgorithmsAccess().getRandom_forestParserRuleCall_0());
		}
		this_Random_forest_0=ruleRandom_forest
		{
			$current = $this_Random_forest_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMachine_learning_AlgorithmsAccess().getSVM_ClassifierParserRuleCall_1());
		}
		this_SVM_Classifier_1=ruleSVM_Classifier
		{
			$current = $this_SVM_Classifier_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMachine_learning_AlgorithmsAccess().getJ48ClassifierParserRuleCall_2());
		}
		this_J48Classifier_2=ruleJ48Classifier
		{
			$current = $this_J48Classifier_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getMachine_learning_AlgorithmsAccess().getNavieBayesParserRuleCall_3());
		}
		this_NavieBayes_3=ruleNavieBayes
		{
			$current = $this_NavieBayes_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleRandom_forest
entryRuleRandom_forest returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRandom_forestRule()); }
	iv_ruleRandom_forest=ruleRandom_forest
	{ $current=$iv_ruleRandom_forest.current; }
	EOF;

// Rule Random_forest
ruleRandom_forest returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Random_forest'
		{
			newLeafNode(otherlv_0, grammarAccess.getRandom_forestAccess().getRandom_forestKeyword_0());
		}
		otherlv_1='create_trees'
		{
			newLeafNode(otherlv_1, grammarAccess.getRandom_forestAccess().getCreate_treesKeyword_1());
		}
		(
			(
				lv_create_trees_2_0=RULE_STRING
				{
					newLeafNode(lv_create_trees_2_0, grammarAccess.getRandom_forestAccess().getCreate_treesSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRandom_forestRule());
					}
					setWithLastConsumed(
						$current,
						"create_trees",
						lv_create_trees_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRandom_forestAccess().getPredict_diabetesPredict_diabetesParserRuleCall_3_0());
				}
				lv_Predict_diabetes_3_0=rulePredict_diabetes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRandom_forestRule());
					}
					set(
						$current,
						"Predict_diabetes",
						lv_Predict_diabetes_3_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Predict_diabetes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSVM_Classifier
entryRuleSVM_Classifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSVM_ClassifierRule()); }
	iv_ruleSVM_Classifier=ruleSVM_Classifier
	{ $current=$iv_ruleSVM_Classifier.current; }
	EOF;

// Rule SVM_Classifier
ruleSVM_Classifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SVM_Classifier'
		{
			newLeafNode(otherlv_0, grammarAccess.getSVM_ClassifierAccess().getSVM_ClassifierKeyword_0());
		}
		otherlv_1='kernel:'
		{
			newLeafNode(otherlv_1, grammarAccess.getSVM_ClassifierAccess().getKernelKeyword_1());
		}
		(
			(
				lv_Kernel_2_0=RULE_STRING
				{
					newLeafNode(lv_Kernel_2_0, grammarAccess.getSVM_ClassifierAccess().getKernelSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSVM_ClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"Kernel",
						lv_Kernel_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSVM_ClassifierAccess().getPredict_diabetesPredict_diabetesParserRuleCall_3_0());
				}
				lv_Predict_diabetes_3_0=rulePredict_diabetes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSVM_ClassifierRule());
					}
					set(
						$current,
						"Predict_diabetes",
						lv_Predict_diabetes_3_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Predict_diabetes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJ48Classifier
entryRuleJ48Classifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJ48ClassifierRule()); }
	iv_ruleJ48Classifier=ruleJ48Classifier
	{ $current=$iv_ruleJ48Classifier.current; }
	EOF;

// Rule J48Classifier
ruleJ48Classifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='J48Classifier'
		{
			newLeafNode(otherlv_0, grammarAccess.getJ48ClassifierAccess().getJ48ClassifierKeyword_0());
		}
		otherlv_1='set_pruned_trees:'
		{
			newLeafNode(otherlv_1, grammarAccess.getJ48ClassifierAccess().getSet_pruned_treesKeyword_1());
		}
		(
			(
				lv_set_pruned_trees_2_0=RULE_STRING
				{
					newLeafNode(lv_set_pruned_trees_2_0, grammarAccess.getJ48ClassifierAccess().getSet_pruned_treesSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJ48ClassifierRule());
					}
					setWithLastConsumed(
						$current,
						"set_pruned_trees",
						lv_set_pruned_trees_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getJ48ClassifierAccess().getPredict_diabetesPredict_diabetesParserRuleCall_3_0());
				}
				lv_Predict_diabetes_3_0=rulePredict_diabetes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJ48ClassifierRule());
					}
					set(
						$current,
						"Predict_diabetes",
						lv_Predict_diabetes_3_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Predict_diabetes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNavieBayes
entryRuleNavieBayes returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavieBayesRule()); }
	iv_ruleNavieBayes=ruleNavieBayes
	{ $current=$iv_ruleNavieBayes.current; }
	EOF;

// Rule NavieBayes
ruleNavieBayes returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NavieBayes'
		{
			newLeafNode(otherlv_0, grammarAccess.getNavieBayesAccess().getNavieBayesKeyword_0());
		}
		otherlv_1='Conditional_Probability_based:'
		{
			newLeafNode(otherlv_1, grammarAccess.getNavieBayesAccess().getConditional_Probability_basedKeyword_1());
		}
		(
			(
				lv_Conditional_Probability_based_2_0=RULE_STRING
				{
					newLeafNode(lv_Conditional_Probability_based_2_0, grammarAccess.getNavieBayesAccess().getConditional_Probability_basedSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavieBayesRule());
					}
					setWithLastConsumed(
						$current,
						"Conditional_Probability_based",
						lv_Conditional_Probability_based_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNavieBayesAccess().getPredict_diabetesPredict_diabetesParserRuleCall_3_0());
				}
				lv_Predict_diabetes_3_0=rulePredict_diabetes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNavieBayesRule());
					}
					set(
						$current,
						"Predict_diabetes",
						lv_Predict_diabetes_3_0,
						"assignment_2_ssda.xtext_ml.ass2.MyDsl.Predict_diabetes");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
