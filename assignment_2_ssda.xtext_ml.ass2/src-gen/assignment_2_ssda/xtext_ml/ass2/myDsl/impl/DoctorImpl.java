/**
 * generated by Xtext 2.26.0
 */
package assignment_2_ssda.xtext_ml.ass2.myDsl.impl;

import assignment_2_ssda.xtext_ml.ass2.myDsl.Doctor;
import assignment_2_ssda.xtext_ml.ass2.myDsl.Medicines;
import assignment_2_ssda.xtext_ml.ass2.myDsl.MyDslPackage;
import assignment_2_ssda.xtext_ml.ass2.myDsl.Symptom;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Doctor</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link assignment_2_ssda.xtext_ml.ass2.myDsl.impl.DoctorImpl#getName <em>Name</em>}</li>
 *   <li>{@link assignment_2_ssda.xtext_ml.ass2.myDsl.impl.DoctorImpl#getDoctor_specailization <em>Doctor specailization</em>}</li>
 *   <li>{@link assignment_2_ssda.xtext_ml.ass2.myDsl.impl.DoctorImpl#getMedicines <em>Medicines</em>}</li>
 *   <li>{@link assignment_2_ssda.xtext_ml.ass2.myDsl.impl.DoctorImpl#getSymptoms <em>Symptoms</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DoctorImpl extends MinimalEObjectImpl.Container implements Doctor
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDoctor_specailization() <em>Doctor specailization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoctor_specailization()
   * @generated
   * @ordered
   */
  protected static final String DOCTOR_SPECAILIZATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDoctor_specailization() <em>Doctor specailization</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDoctor_specailization()
   * @generated
   * @ordered
   */
  protected String doctor_specailization = DOCTOR_SPECAILIZATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getMedicines() <em>Medicines</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMedicines()
   * @generated
   * @ordered
   */
  protected EList<Medicines> medicines;

  /**
   * The cached value of the '{@link #getSymptoms() <em>Symptoms</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSymptoms()
   * @generated
   * @ordered
   */
  protected EList<Symptom> symptoms;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DoctorImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.DOCTOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DOCTOR__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDoctor_specailization()
  {
    return doctor_specailization;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDoctor_specailization(String newDoctor_specailization)
  {
    String oldDoctor_specailization = doctor_specailization;
    doctor_specailization = newDoctor_specailization;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.DOCTOR__DOCTOR_SPECAILIZATION, oldDoctor_specailization, doctor_specailization));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Medicines> getMedicines()
  {
    if (medicines == null)
    {
      medicines = new EObjectContainmentEList<Medicines>(Medicines.class, this, MyDslPackage.DOCTOR__MEDICINES);
    }
    return medicines;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Symptom> getSymptoms()
  {
    if (symptoms == null)
    {
      symptoms = new EObjectContainmentEList<Symptom>(Symptom.class, this, MyDslPackage.DOCTOR__SYMPTOMS);
    }
    return symptoms;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.DOCTOR__MEDICINES:
        return ((InternalEList<?>)getMedicines()).basicRemove(otherEnd, msgs);
      case MyDslPackage.DOCTOR__SYMPTOMS:
        return ((InternalEList<?>)getSymptoms()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.DOCTOR__NAME:
        return getName();
      case MyDslPackage.DOCTOR__DOCTOR_SPECAILIZATION:
        return getDoctor_specailization();
      case MyDslPackage.DOCTOR__MEDICINES:
        return getMedicines();
      case MyDslPackage.DOCTOR__SYMPTOMS:
        return getSymptoms();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.DOCTOR__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.DOCTOR__DOCTOR_SPECAILIZATION:
        setDoctor_specailization((String)newValue);
        return;
      case MyDslPackage.DOCTOR__MEDICINES:
        getMedicines().clear();
        getMedicines().addAll((Collection<? extends Medicines>)newValue);
        return;
      case MyDslPackage.DOCTOR__SYMPTOMS:
        getSymptoms().clear();
        getSymptoms().addAll((Collection<? extends Symptom>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DOCTOR__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.DOCTOR__DOCTOR_SPECAILIZATION:
        setDoctor_specailization(DOCTOR_SPECAILIZATION_EDEFAULT);
        return;
      case MyDslPackage.DOCTOR__MEDICINES:
        getMedicines().clear();
        return;
      case MyDslPackage.DOCTOR__SYMPTOMS:
        getSymptoms().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.DOCTOR__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.DOCTOR__DOCTOR_SPECAILIZATION:
        return DOCTOR_SPECAILIZATION_EDEFAULT == null ? doctor_specailization != null : !DOCTOR_SPECAILIZATION_EDEFAULT.equals(doctor_specailization);
      case MyDslPackage.DOCTOR__MEDICINES:
        return medicines != null && !medicines.isEmpty();
      case MyDslPackage.DOCTOR__SYMPTOMS:
        return symptoms != null && !symptoms.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", Doctor_specailization: ");
    result.append(doctor_specailization);
    result.append(')');
    return result.toString();
  }

} //DoctorImpl
