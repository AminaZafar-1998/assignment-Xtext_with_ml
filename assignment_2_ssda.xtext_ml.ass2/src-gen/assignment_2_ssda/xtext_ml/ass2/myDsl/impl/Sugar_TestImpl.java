/**
 * generated by Xtext 2.26.0
 */
package assignment_2_ssda.xtext_ml.ass2.myDsl.impl;

import assignment_2_ssda.xtext_ml.ass2.myDsl.MyDslPackage;
import assignment_2_ssda.xtext_ml.ass2.myDsl.Sugar_Test;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Sugar Test</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link assignment_2_ssda.xtext_ml.ass2.myDsl.impl.Sugar_TestImpl#getPrevious_blood_sugar <em>Previous blood sugar</em>}</li>
 *   <li>{@link assignment_2_ssda.xtext_ml.ass2.myDsl.impl.Sugar_TestImpl#getCurrent_blood_sugar <em>Current blood sugar</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Sugar_TestImpl extends MinimalEObjectImpl.Container implements Sugar_Test
{
  /**
   * The default value of the '{@link #getPrevious_blood_sugar() <em>Previous blood sugar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrevious_blood_sugar()
   * @generated
   * @ordered
   */
  protected static final String PREVIOUS_BLOOD_SUGAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrevious_blood_sugar() <em>Previous blood sugar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPrevious_blood_sugar()
   * @generated
   * @ordered
   */
  protected String previous_blood_sugar = PREVIOUS_BLOOD_SUGAR_EDEFAULT;

  /**
   * The default value of the '{@link #getCurrent_blood_sugar() <em>Current blood sugar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrent_blood_sugar()
   * @generated
   * @ordered
   */
  protected static final String CURRENT_BLOOD_SUGAR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCurrent_blood_sugar() <em>Current blood sugar</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCurrent_blood_sugar()
   * @generated
   * @ordered
   */
  protected String current_blood_sugar = CURRENT_BLOOD_SUGAR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Sugar_TestImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SUGAR_TEST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPrevious_blood_sugar()
  {
    return previous_blood_sugar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPrevious_blood_sugar(String newPrevious_blood_sugar)
  {
    String oldPrevious_blood_sugar = previous_blood_sugar;
    previous_blood_sugar = newPrevious_blood_sugar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SUGAR_TEST__PREVIOUS_BLOOD_SUGAR, oldPrevious_blood_sugar, previous_blood_sugar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCurrent_blood_sugar()
  {
    return current_blood_sugar;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCurrent_blood_sugar(String newCurrent_blood_sugar)
  {
    String oldCurrent_blood_sugar = current_blood_sugar;
    current_blood_sugar = newCurrent_blood_sugar;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SUGAR_TEST__CURRENT_BLOOD_SUGAR, oldCurrent_blood_sugar, current_blood_sugar));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SUGAR_TEST__PREVIOUS_BLOOD_SUGAR:
        return getPrevious_blood_sugar();
      case MyDslPackage.SUGAR_TEST__CURRENT_BLOOD_SUGAR:
        return getCurrent_blood_sugar();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SUGAR_TEST__PREVIOUS_BLOOD_SUGAR:
        setPrevious_blood_sugar((String)newValue);
        return;
      case MyDslPackage.SUGAR_TEST__CURRENT_BLOOD_SUGAR:
        setCurrent_blood_sugar((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SUGAR_TEST__PREVIOUS_BLOOD_SUGAR:
        setPrevious_blood_sugar(PREVIOUS_BLOOD_SUGAR_EDEFAULT);
        return;
      case MyDslPackage.SUGAR_TEST__CURRENT_BLOOD_SUGAR:
        setCurrent_blood_sugar(CURRENT_BLOOD_SUGAR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SUGAR_TEST__PREVIOUS_BLOOD_SUGAR:
        return PREVIOUS_BLOOD_SUGAR_EDEFAULT == null ? previous_blood_sugar != null : !PREVIOUS_BLOOD_SUGAR_EDEFAULT.equals(previous_blood_sugar);
      case MyDslPackage.SUGAR_TEST__CURRENT_BLOOD_SUGAR:
        return CURRENT_BLOOD_SUGAR_EDEFAULT == null ? current_blood_sugar != null : !CURRENT_BLOOD_SUGAR_EDEFAULT.equals(current_blood_sugar);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (Previous_blood_sugar: ");
    result.append(previous_blood_sugar);
    result.append(", Current_blood_sugar: ");
    result.append(current_blood_sugar);
    result.append(')');
    return result.toString();
  }

} //Sugar_TestImpl
