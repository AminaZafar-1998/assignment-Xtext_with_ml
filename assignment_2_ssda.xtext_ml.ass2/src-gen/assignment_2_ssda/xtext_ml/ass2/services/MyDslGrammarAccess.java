/*
 * generated by Xtext 2.26.0
 */
package assignment_2_ssda.xtext_ml.ass2.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class Diabetes_Prediction_SystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Diabetes_Prediction_System");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDiabetes_prediction_SystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cMedicinesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMedicinesMedicinesParserRuleCall_2_0 = (RuleCall)cMedicinesAssignment_2.eContents().get(0);
		private final Assignment cSymptomAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSymptomSymptomParserRuleCall_3_0 = (RuleCall)cSymptomAssignment_3.eContents().get(0);
		private final Assignment cDoctorsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDoctorsDoctorParserRuleCall_4_0 = (RuleCall)cDoctorsAssignment_4.eContents().get(0);
		private final Assignment cPatientAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPatientPatientParserRuleCall_5_0 = (RuleCall)cPatientAssignment_5.eContents().get(0);
		private final Assignment cMachine_learning_AlgorithmsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMachine_learning_AlgorithmsMachine_learning_AlgorithmsParserRuleCall_6_0 = (RuleCall)cMachine_learning_AlgorithmsAssignment_6.eContents().get(0);
		
		//Diabetes_Prediction_System: 'Diabetes_prediction_System:'  name =ID
		// medicines += Medicines*
		// symptom +=Symptom*
		// doctors += Doctor*
		// patient += Patient*
		// Machine_learning_Algorithms += Machine_learning_Algorithms+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Diabetes_prediction_System:'  name =ID
		//medicines += Medicines*
		//symptom +=Symptom*
		//doctors += Doctor*
		//patient += Patient*
		//Machine_learning_Algorithms += Machine_learning_Algorithms+
		public Group getGroup() { return cGroup; }
		
		//'Diabetes_prediction_System:'
		public Keyword getDiabetes_prediction_SystemKeyword_0() { return cDiabetes_prediction_SystemKeyword_0; }
		
		//name =ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//medicines += Medicines*
		public Assignment getMedicinesAssignment_2() { return cMedicinesAssignment_2; }
		
		//Medicines
		public RuleCall getMedicinesMedicinesParserRuleCall_2_0() { return cMedicinesMedicinesParserRuleCall_2_0; }
		
		//symptom +=Symptom*
		public Assignment getSymptomAssignment_3() { return cSymptomAssignment_3; }
		
		//Symptom
		public RuleCall getSymptomSymptomParserRuleCall_3_0() { return cSymptomSymptomParserRuleCall_3_0; }
		
		//doctors += Doctor*
		public Assignment getDoctorsAssignment_4() { return cDoctorsAssignment_4; }
		
		//Doctor
		public RuleCall getDoctorsDoctorParserRuleCall_4_0() { return cDoctorsDoctorParserRuleCall_4_0; }
		
		//patient += Patient*
		public Assignment getPatientAssignment_5() { return cPatientAssignment_5; }
		
		//Patient
		public RuleCall getPatientPatientParserRuleCall_5_0() { return cPatientPatientParserRuleCall_5_0; }
		
		//Machine_learning_Algorithms += Machine_learning_Algorithms+
		public Assignment getMachine_learning_AlgorithmsAssignment_6() { return cMachine_learning_AlgorithmsAssignment_6; }
		
		//Machine_learning_Algorithms
		public RuleCall getMachine_learning_AlgorithmsMachine_learning_AlgorithmsParserRuleCall_6_0() { return cMachine_learning_AlgorithmsMachine_learning_AlgorithmsParserRuleCall_6_0; }
	}
	public class MedicinesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Medicines");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMedicinesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMedicine_nameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMedicine_nameIDTerminalRuleCall_1_0 = (RuleCall)cMedicine_nameAssignment_1.eContents().get(0);
		private final Keyword cMedicine_dossageKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMedicine_dossageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMedicine_dossageSTRINGTerminalRuleCall_3_0 = (RuleCall)cMedicine_dossageAssignment_3.eContents().get(0);
		
		//Medicines: 'Medicines' Medicine_name = ID
		//     'Medicine_dossage:' Medicine_dossage = STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Medicines' Medicine_name = ID
		//    'Medicine_dossage:' Medicine_dossage = STRING
		public Group getGroup() { return cGroup; }
		
		//'Medicines'
		public Keyword getMedicinesKeyword_0() { return cMedicinesKeyword_0; }
		
		//Medicine_name = ID
		public Assignment getMedicine_nameAssignment_1() { return cMedicine_nameAssignment_1; }
		
		//ID
		public RuleCall getMedicine_nameIDTerminalRuleCall_1_0() { return cMedicine_nameIDTerminalRuleCall_1_0; }
		
		//'Medicine_dossage:'
		public Keyword getMedicine_dossageKeyword_2() { return cMedicine_dossageKeyword_2; }
		
		//Medicine_dossage = STRING
		public Assignment getMedicine_dossageAssignment_3() { return cMedicine_dossageAssignment_3; }
		
		//STRING
		public RuleCall getMedicine_dossageSTRINGTerminalRuleCall_3_0() { return cMedicine_dossageSTRINGTerminalRuleCall_3_0; }
	}
	public class SymptomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Symptom");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPolyuriaParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPolydipsiaParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSudden_weight_lossParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cPolyphagiaParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGenital_thrushParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cVisual_blurringParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cItchingParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cIrritabilityParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cDelayed_healingParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cPartial_paresisParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cMuscle_stiffnessParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cAlopeciaParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cObesityParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		
		//Symptom: Polyuria | Polydipsia |sudden_weight_loss | Polyphagia | Genital_thrush | visual_blurring | Itching | Irritability | delayed_healing | partial_paresis
		//    | muscle_stiffness | Alopecia | Obesity
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//Polyuria | Polydipsia |sudden_weight_loss | Polyphagia | Genital_thrush | visual_blurring | Itching | Irritability | delayed_healing | partial_paresis
		//   | muscle_stiffness | Alopecia | Obesity
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Polyuria
		public RuleCall getPolyuriaParserRuleCall_0() { return cPolyuriaParserRuleCall_0; }
		
		//Polydipsia
		public RuleCall getPolydipsiaParserRuleCall_1() { return cPolydipsiaParserRuleCall_1; }
		
		//sudden_weight_loss
		public RuleCall getSudden_weight_lossParserRuleCall_2() { return cSudden_weight_lossParserRuleCall_2; }
		
		//Polyphagia
		public RuleCall getPolyphagiaParserRuleCall_3() { return cPolyphagiaParserRuleCall_3; }
		
		//Genital_thrush
		public RuleCall getGenital_thrushParserRuleCall_4() { return cGenital_thrushParserRuleCall_4; }
		
		//visual_blurring
		public RuleCall getVisual_blurringParserRuleCall_5() { return cVisual_blurringParserRuleCall_5; }
		
		//Itching
		public RuleCall getItchingParserRuleCall_6() { return cItchingParserRuleCall_6; }
		
		//Irritability
		public RuleCall getIrritabilityParserRuleCall_7() { return cIrritabilityParserRuleCall_7; }
		
		//delayed_healing
		public RuleCall getDelayed_healingParserRuleCall_8() { return cDelayed_healingParserRuleCall_8; }
		
		//partial_paresis
		public RuleCall getPartial_paresisParserRuleCall_9() { return cPartial_paresisParserRuleCall_9; }
		
		//muscle_stiffness
		public RuleCall getMuscle_stiffnessParserRuleCall_10() { return cMuscle_stiffnessParserRuleCall_10; }
		
		//Alopecia
		public RuleCall getAlopeciaParserRuleCall_11() { return cAlopeciaParserRuleCall_11; }
		
		//Obesity
		public RuleCall getObesityParserRuleCall_12() { return cObesityParserRuleCall_12; }
	}
	public class PolyuriaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Polyuria");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolyuriaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Polyuria: 'Polyuria'
		//     'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Polyuria'
		//    'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Polyuria'
		public Keyword getPolyuriaKeyword_0() { return cPolyuriaKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class PolydipsiaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Polydipsia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolydipsiaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Polydipsia: 'Polydipsia'
		//     'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Polydipsia'
		//    'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Polydipsia'
		public Keyword getPolydipsiaKeyword_0() { return cPolydipsiaKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Sudden_weight_lossElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.sudden_weight_loss");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSudden_weight_lossKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//sudden_weight_loss: 'sudden_weight_loss'
		//    'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'sudden_weight_loss'
		//   'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'sudden_weight_loss'
		public Keyword getSudden_weight_lossKeyword_0() { return cSudden_weight_lossKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class PolyphagiaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Polyphagia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPolyphagiaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Polyphagia: 'Polyphagia'
		//    'name:' name=ID
		//  ;
		@Override public ParserRule getRule() { return rule; }
		
		//'Polyphagia'
		//   'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Polyphagia'
		public Keyword getPolyphagiaKeyword_0() { return cPolyphagiaKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Genital_thrushElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Genital_thrush");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGenital_thrushKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Genital_thrush: 'Genital_thrush'
		//    'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Genital_thrush'
		//   'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Genital_thrush'
		public Keyword getGenital_thrushKeyword_0() { return cGenital_thrushKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Visual_blurringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.visual_blurring");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVisual_blurringKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//visual_blurring: 'visual_blurring'
		//    'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'visual_blurring'
		//   'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'visual_blurring'
		public Keyword getVisual_blurringKeyword_0() { return cVisual_blurringKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class ItchingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Itching");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cItchingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Itching: 'Itching'
		//        'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Itching'
		//       'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Itching'
		public Keyword getItchingKeyword_0() { return cItchingKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class IrritabilityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Irritability");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIrritabilityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Irritability: 'Irritability'
		//       'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Irritability'
		//      'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Irritability'
		public Keyword getIrritabilityKeyword_0() { return cIrritabilityKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Delayed_healingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.delayed_healing");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDelayed_healingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//delayed_healing: 'delayed_healing'
		//       'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'delayed_healing'
		//      'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'delayed_healing'
		public Keyword getDelayed_healingKeyword_0() { return cDelayed_healingKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Partial_paresisElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.partial_paresis");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPartial_paresisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//partial_paresis: 'partial_paresis'
		//       'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'partial_paresis'
		//      'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'partial_paresis'
		public Keyword getPartial_paresisKeyword_0() { return cPartial_paresisKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Muscle_stiffnessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.muscle_stiffness");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMuscle_stiffnessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//muscle_stiffness: 'muscle_stiffness'
		//       'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'muscle_stiffness'
		//      'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'muscle_stiffness'
		public Keyword getMuscle_stiffnessKeyword_0() { return cMuscle_stiffnessKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class AlopeciaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Alopecia");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlopeciaKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Alopecia: 'Alopecia'
		//       'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Alopecia'
		//      'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Alopecia'
		public Keyword getAlopeciaKeyword_0() { return cAlopeciaKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class ObesityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Obesity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cObesityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Obesity: 'Obesity'
		//       'name:' name=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Obesity'
		//      'name:' name=ID
		public Group getGroup() { return cGroup; }
		
		//'Obesity'
		public Keyword getObesityKeyword_0() { return cObesityKeyword_0; }
		
		//'name:'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }
	}
	public class Sugar_TestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Sugar_Test");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSugar_testKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPrevious_blood_sugarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPrevious_blood_sugarAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPrevious_blood_sugarSTRINGTerminalRuleCall_2_0 = (RuleCall)cPrevious_blood_sugarAssignment_2.eContents().get(0);
		private final Keyword cCurrent_blood_sugarKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cCurrent_blood_sugarAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cCurrent_blood_sugarSTRINGTerminalRuleCall_4_0 = (RuleCall)cCurrent_blood_sugarAssignment_4.eContents().get(0);
		
		//Sugar_Test: 'Sugar_test'
		//      'Previous_blood_sugar' Previous_blood_sugar=STRING
		//      'Current_blood_sugar'  Current_blood_sugar=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Sugar_test'
		//     'Previous_blood_sugar' Previous_blood_sugar=STRING
		//     'Current_blood_sugar'  Current_blood_sugar=STRING
		public Group getGroup() { return cGroup; }
		
		//'Sugar_test'
		public Keyword getSugar_testKeyword_0() { return cSugar_testKeyword_0; }
		
		//'Previous_blood_sugar'
		public Keyword getPrevious_blood_sugarKeyword_1() { return cPrevious_blood_sugarKeyword_1; }
		
		//Previous_blood_sugar=STRING
		public Assignment getPrevious_blood_sugarAssignment_2() { return cPrevious_blood_sugarAssignment_2; }
		
		//STRING
		public RuleCall getPrevious_blood_sugarSTRINGTerminalRuleCall_2_0() { return cPrevious_blood_sugarSTRINGTerminalRuleCall_2_0; }
		
		//'Current_blood_sugar'
		public Keyword getCurrent_blood_sugarKeyword_3() { return cCurrent_blood_sugarKeyword_3; }
		
		//Current_blood_sugar=STRING
		public Assignment getCurrent_blood_sugarAssignment_4() { return cCurrent_blood_sugarAssignment_4; }
		
		//STRING
		public RuleCall getCurrent_blood_sugarSTRINGTerminalRuleCall_4_0() { return cCurrent_blood_sugarSTRINGTerminalRuleCall_4_0; }
	}
	public class DoctorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Doctor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDoctorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cDoctor_specailizationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDoctor_specailizationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDoctor_specailizationSTRINGTerminalRuleCall_3_0 = (RuleCall)cDoctor_specailizationAssignment_3.eContents().get(0);
		private final Assignment cMedicinesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMedicinesMedicinesParserRuleCall_4_0 = (RuleCall)cMedicinesAssignment_4.eContents().get(0);
		private final Assignment cSymptomsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymptomsSymptomParserRuleCall_5_0 = (RuleCall)cSymptomsAssignment_5.eContents().get(0);
		
		//Doctor: 'Doctor' name=ID
		//      'Doctor_specailization' Doctor_specailization = STRING
		//       medicines += Medicines*
		//       symptoms  += Symptom*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Doctor' name=ID
		//     'Doctor_specailization' Doctor_specailization = STRING
		//      medicines += Medicines*
		//      symptoms  += Symptom*
		public Group getGroup() { return cGroup; }
		
		//'Doctor'
		public Keyword getDoctorKeyword_0() { return cDoctorKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'Doctor_specailization'
		public Keyword getDoctor_specailizationKeyword_2() { return cDoctor_specailizationKeyword_2; }
		
		//Doctor_specailization = STRING
		public Assignment getDoctor_specailizationAssignment_3() { return cDoctor_specailizationAssignment_3; }
		
		//STRING
		public RuleCall getDoctor_specailizationSTRINGTerminalRuleCall_3_0() { return cDoctor_specailizationSTRINGTerminalRuleCall_3_0; }
		
		//medicines += Medicines*
		public Assignment getMedicinesAssignment_4() { return cMedicinesAssignment_4; }
		
		//Medicines
		public RuleCall getMedicinesMedicinesParserRuleCall_4_0() { return cMedicinesMedicinesParserRuleCall_4_0; }
		
		//symptoms  += Symptom*
		public Assignment getSymptomsAssignment_5() { return cSymptomsAssignment_5; }
		
		//Symptom
		public RuleCall getSymptomsSymptomParserRuleCall_5_0() { return cSymptomsSymptomParserRuleCall_5_0; }
	}
	public class PatientElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Patient");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPatientKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cPatient_GenderKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPatient_GenderAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPatient_GenderIDTerminalRuleCall_3_0 = (RuleCall)cPatient_GenderAssignment_3.eContents().get(0);
		private final Keyword cPatient_AgeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cPatient_AgeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cPatient_AgeINTTerminalRuleCall_5_0 = (RuleCall)cPatient_AgeAssignment_5.eContents().get(0);
		private final Keyword cPatient_HeightKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPatient_HeightAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPatient_HeightSTRINGTerminalRuleCall_7_0 = (RuleCall)cPatient_HeightAssignment_7.eContents().get(0);
		private final Keyword cPatient_WeightKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cPatient_WeightAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cPatient_WeightSTRINGTerminalRuleCall_9_0 = (RuleCall)cPatient_WeightAssignment_9.eContents().get(0);
		private final Keyword cPatients_blood_pressureKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cPatient_blood_pressureAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cPatient_blood_pressureINTTerminalRuleCall_11_0 = (RuleCall)cPatient_blood_pressureAssignment_11.eContents().get(0);
		private final Keyword cPulse_rateKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cPulse_rateAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cPulse_rateINTTerminalRuleCall_13_0 = (RuleCall)cPulse_rateAssignment_13.eContents().get(0);
		private final Assignment cSymptomsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cSymptomsSymptomParserRuleCall_14_0 = (RuleCall)cSymptomsAssignment_14.eContents().get(0);
		private final Assignment cMedicinesAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cMedicinesMedicinesParserRuleCall_15_0 = (RuleCall)cMedicinesAssignment_15.eContents().get(0);
		private final Assignment cSugar_testsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cSugar_testsSugar_TestParserRuleCall_16_0 = (RuleCall)cSugar_testsAssignment_16.eContents().get(0);
		private final Keyword cDoctorKeyword_17 = (Keyword)cGroup.eContents().get(17);
		private final Assignment cDOCTORSAssignment_18 = (Assignment)cGroup.eContents().get(18);
		private final CrossReference cDOCTORSDoctorCrossReference_18_0 = (CrossReference)cDOCTORSAssignment_18.eContents().get(0);
		private final RuleCall cDOCTORSDoctorIDTerminalRuleCall_18_0_1 = (RuleCall)cDOCTORSDoctorCrossReference_18_0.eContents().get(1);
		
		//Patient: 'Patient' name =ID
		//        'Patient_Gender' Patient_Gender= ID
		//        'Patient_Age' Patient_Age= INT
		//        'Patient_Height' Patient_Height= STRING
		//         'Patient_Weight' Patient_Weight= STRING
		//        'patients_blood_pressure' patient_blood_pressure= INT
		//         'pulse_rate' pulse_rate=INT
		//         symptoms +=Symptom+
		//         medicines += Medicines*
		//         sugar_tests +=Sugar_Test+
		//         'doctor' DOCTORS += [Doctor]+
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Patient' name =ID
		//       'Patient_Gender' Patient_Gender= ID
		//       'Patient_Age' Patient_Age= INT
		//       'Patient_Height' Patient_Height= STRING
		//        'Patient_Weight' Patient_Weight= STRING
		//       'patients_blood_pressure' patient_blood_pressure= INT
		//        'pulse_rate' pulse_rate=INT
		//        symptoms +=Symptom+
		//        medicines += Medicines*
		//        sugar_tests +=Sugar_Test+
		//        'doctor' DOCTORS += [Doctor]+
		public Group getGroup() { return cGroup; }
		
		//'Patient'
		public Keyword getPatientKeyword_0() { return cPatientKeyword_0; }
		
		//name =ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'Patient_Gender'
		public Keyword getPatient_GenderKeyword_2() { return cPatient_GenderKeyword_2; }
		
		//Patient_Gender= ID
		public Assignment getPatient_GenderAssignment_3() { return cPatient_GenderAssignment_3; }
		
		//ID
		public RuleCall getPatient_GenderIDTerminalRuleCall_3_0() { return cPatient_GenderIDTerminalRuleCall_3_0; }
		
		//'Patient_Age'
		public Keyword getPatient_AgeKeyword_4() { return cPatient_AgeKeyword_4; }
		
		//Patient_Age= INT
		public Assignment getPatient_AgeAssignment_5() { return cPatient_AgeAssignment_5; }
		
		//INT
		public RuleCall getPatient_AgeINTTerminalRuleCall_5_0() { return cPatient_AgeINTTerminalRuleCall_5_0; }
		
		//'Patient_Height'
		public Keyword getPatient_HeightKeyword_6() { return cPatient_HeightKeyword_6; }
		
		//Patient_Height= STRING
		public Assignment getPatient_HeightAssignment_7() { return cPatient_HeightAssignment_7; }
		
		//STRING
		public RuleCall getPatient_HeightSTRINGTerminalRuleCall_7_0() { return cPatient_HeightSTRINGTerminalRuleCall_7_0; }
		
		//'Patient_Weight'
		public Keyword getPatient_WeightKeyword_8() { return cPatient_WeightKeyword_8; }
		
		//Patient_Weight= STRING
		public Assignment getPatient_WeightAssignment_9() { return cPatient_WeightAssignment_9; }
		
		//STRING
		public RuleCall getPatient_WeightSTRINGTerminalRuleCall_9_0() { return cPatient_WeightSTRINGTerminalRuleCall_9_0; }
		
		//'patients_blood_pressure'
		public Keyword getPatients_blood_pressureKeyword_10() { return cPatients_blood_pressureKeyword_10; }
		
		//patient_blood_pressure= INT
		public Assignment getPatient_blood_pressureAssignment_11() { return cPatient_blood_pressureAssignment_11; }
		
		//INT
		public RuleCall getPatient_blood_pressureINTTerminalRuleCall_11_0() { return cPatient_blood_pressureINTTerminalRuleCall_11_0; }
		
		//'pulse_rate'
		public Keyword getPulse_rateKeyword_12() { return cPulse_rateKeyword_12; }
		
		//pulse_rate=INT
		public Assignment getPulse_rateAssignment_13() { return cPulse_rateAssignment_13; }
		
		//INT
		public RuleCall getPulse_rateINTTerminalRuleCall_13_0() { return cPulse_rateINTTerminalRuleCall_13_0; }
		
		//symptoms +=Symptom+
		public Assignment getSymptomsAssignment_14() { return cSymptomsAssignment_14; }
		
		//Symptom
		public RuleCall getSymptomsSymptomParserRuleCall_14_0() { return cSymptomsSymptomParserRuleCall_14_0; }
		
		//medicines += Medicines*
		public Assignment getMedicinesAssignment_15() { return cMedicinesAssignment_15; }
		
		//Medicines
		public RuleCall getMedicinesMedicinesParserRuleCall_15_0() { return cMedicinesMedicinesParserRuleCall_15_0; }
		
		//sugar_tests +=Sugar_Test+
		public Assignment getSugar_testsAssignment_16() { return cSugar_testsAssignment_16; }
		
		//Sugar_Test
		public RuleCall getSugar_testsSugar_TestParserRuleCall_16_0() { return cSugar_testsSugar_TestParserRuleCall_16_0; }
		
		//'doctor'
		public Keyword getDoctorKeyword_17() { return cDoctorKeyword_17; }
		
		//DOCTORS += [Doctor]+
		public Assignment getDOCTORSAssignment_18() { return cDOCTORSAssignment_18; }
		
		//[Doctor]
		public CrossReference getDOCTORSDoctorCrossReference_18_0() { return cDOCTORSDoctorCrossReference_18_0; }
		
		//ID
		public RuleCall getDOCTORSDoctorIDTerminalRuleCall_18_0_1() { return cDOCTORSDoctorIDTerminalRuleCall_18_0_1; }
	}
	public class Predict_diabetesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Predict_diabetes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPredict_diabetesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameINTTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Predict_diabetes :'Predict_diabetes' name=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Predict_diabetes' name=INT
		public Group getGroup() { return cGroup; }
		
		//'Predict_diabetes'
		public Keyword getPredict_diabetesKeyword_0() { return cPredict_diabetesKeyword_0; }
		
		//name=INT
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//INT
		public RuleCall getNameINTTerminalRuleCall_1_0() { return cNameINTTerminalRuleCall_1_0; }
	}
	public class Machine_learning_AlgorithmsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Machine_learning_Algorithms");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRandom_forestParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSVM_ClassifierParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cJ48ClassifierParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cNavieBayesParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Machine_learning_Algorithms:  Random_forest | SVM_Classifier|J48Classifier |NavieBayes
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Random_forest | SVM_Classifier|J48Classifier |NavieBayes
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Random_forest
		public RuleCall getRandom_forestParserRuleCall_0() { return cRandom_forestParserRuleCall_0; }
		
		//SVM_Classifier
		public RuleCall getSVM_ClassifierParserRuleCall_1() { return cSVM_ClassifierParserRuleCall_1; }
		
		//J48Classifier
		public RuleCall getJ48ClassifierParserRuleCall_2() { return cJ48ClassifierParserRuleCall_2; }
		
		//NavieBayes
		public RuleCall getNavieBayesParserRuleCall_3() { return cNavieBayesParserRuleCall_3; }
	}
	public class Random_forestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.Random_forest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRandom_forestKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCreate_treesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCreate_treesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCreate_treesSTRINGTerminalRuleCall_2_0 = (RuleCall)cCreate_treesAssignment_2.eContents().get(0);
		private final Assignment cPredict_diabetesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPredict_diabetesPredict_diabetesParserRuleCall_3_0 = (RuleCall)cPredict_diabetesAssignment_3.eContents().get(0);
		
		//Random_forest: 'Random_forest'
		//        'create_trees' create_trees=STRING
		//         Predict_diabetes = Predict_diabetes
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'Random_forest'
		//       'create_trees' create_trees=STRING
		//        Predict_diabetes = Predict_diabetes
		public Group getGroup() { return cGroup; }
		
		//'Random_forest'
		public Keyword getRandom_forestKeyword_0() { return cRandom_forestKeyword_0; }
		
		//'create_trees'
		public Keyword getCreate_treesKeyword_1() { return cCreate_treesKeyword_1; }
		
		//create_trees=STRING
		public Assignment getCreate_treesAssignment_2() { return cCreate_treesAssignment_2; }
		
		//STRING
		public RuleCall getCreate_treesSTRINGTerminalRuleCall_2_0() { return cCreate_treesSTRINGTerminalRuleCall_2_0; }
		
		//Predict_diabetes = Predict_diabetes
		public Assignment getPredict_diabetesAssignment_3() { return cPredict_diabetesAssignment_3; }
		
		//Predict_diabetes
		public RuleCall getPredict_diabetesPredict_diabetesParserRuleCall_3_0() { return cPredict_diabetesPredict_diabetesParserRuleCall_3_0; }
	}
	public class SVM_ClassifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.SVM_Classifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSVM_ClassifierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cKernelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cKernelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cKernelSTRINGTerminalRuleCall_2_0 = (RuleCall)cKernelAssignment_2.eContents().get(0);
		private final Assignment cPredict_diabetesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPredict_diabetesPredict_diabetesParserRuleCall_3_0 = (RuleCall)cPredict_diabetesAssignment_3.eContents().get(0);
		
		//SVM_Classifier: 'SVM_Classifier'
		//        'kernel:' Kernel=STRING
		//        Predict_diabetes = Predict_diabetes
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'SVM_Classifier'
		//       'kernel:' Kernel=STRING
		//       Predict_diabetes = Predict_diabetes
		public Group getGroup() { return cGroup; }
		
		//'SVM_Classifier'
		public Keyword getSVM_ClassifierKeyword_0() { return cSVM_ClassifierKeyword_0; }
		
		//'kernel:'
		public Keyword getKernelKeyword_1() { return cKernelKeyword_1; }
		
		//Kernel=STRING
		public Assignment getKernelAssignment_2() { return cKernelAssignment_2; }
		
		//STRING
		public RuleCall getKernelSTRINGTerminalRuleCall_2_0() { return cKernelSTRINGTerminalRuleCall_2_0; }
		
		//Predict_diabetes = Predict_diabetes
		public Assignment getPredict_diabetesAssignment_3() { return cPredict_diabetesAssignment_3; }
		
		//Predict_diabetes
		public RuleCall getPredict_diabetesPredict_diabetesParserRuleCall_3_0() { return cPredict_diabetesPredict_diabetesParserRuleCall_3_0; }
	}
	public class J48ClassifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.J48Classifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJ48ClassifierKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cSet_pruned_treesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSet_pruned_treesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSet_pruned_treesSTRINGTerminalRuleCall_2_0 = (RuleCall)cSet_pruned_treesAssignment_2.eContents().get(0);
		private final Assignment cPredict_diabetesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPredict_diabetesPredict_diabetesParserRuleCall_3_0 = (RuleCall)cPredict_diabetesAssignment_3.eContents().get(0);
		
		//J48Classifier: 'J48Classifier'
		//        'set_pruned_trees:' set_pruned_trees = STRING
		//        Predict_diabetes = Predict_diabetes
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'J48Classifier'
		//       'set_pruned_trees:' set_pruned_trees = STRING
		//       Predict_diabetes = Predict_diabetes
		public Group getGroup() { return cGroup; }
		
		//'J48Classifier'
		public Keyword getJ48ClassifierKeyword_0() { return cJ48ClassifierKeyword_0; }
		
		//'set_pruned_trees:'
		public Keyword getSet_pruned_treesKeyword_1() { return cSet_pruned_treesKeyword_1; }
		
		//set_pruned_trees = STRING
		public Assignment getSet_pruned_treesAssignment_2() { return cSet_pruned_treesAssignment_2; }
		
		//STRING
		public RuleCall getSet_pruned_treesSTRINGTerminalRuleCall_2_0() { return cSet_pruned_treesSTRINGTerminalRuleCall_2_0; }
		
		//Predict_diabetes = Predict_diabetes
		public Assignment getPredict_diabetesAssignment_3() { return cPredict_diabetesAssignment_3; }
		
		//Predict_diabetes
		public RuleCall getPredict_diabetesPredict_diabetesParserRuleCall_3_0() { return cPredict_diabetesPredict_diabetesParserRuleCall_3_0; }
	}
	public class NavieBayesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "assignment_2_ssda.xtext_ml.ass2.MyDsl.NavieBayes");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNavieBayesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cConditional_Probability_basedKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cConditional_Probability_basedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cConditional_Probability_basedSTRINGTerminalRuleCall_2_0 = (RuleCall)cConditional_Probability_basedAssignment_2.eContents().get(0);
		private final Assignment cPredict_diabetesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPredict_diabetesPredict_diabetesParserRuleCall_3_0 = (RuleCall)cPredict_diabetesAssignment_3.eContents().get(0);
		
		//NavieBayes: 'NavieBayes'
		//        'Conditional_Probability_based:' Conditional_Probability_based = STRING
		//        Predict_diabetes = Predict_diabetes
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'NavieBayes'
		//       'Conditional_Probability_based:' Conditional_Probability_based = STRING
		//       Predict_diabetes = Predict_diabetes
		public Group getGroup() { return cGroup; }
		
		//'NavieBayes'
		public Keyword getNavieBayesKeyword_0() { return cNavieBayesKeyword_0; }
		
		//'Conditional_Probability_based:'
		public Keyword getConditional_Probability_basedKeyword_1() { return cConditional_Probability_basedKeyword_1; }
		
		//Conditional_Probability_based = STRING
		public Assignment getConditional_Probability_basedAssignment_2() { return cConditional_Probability_basedAssignment_2; }
		
		//STRING
		public RuleCall getConditional_Probability_basedSTRINGTerminalRuleCall_2_0() { return cConditional_Probability_basedSTRINGTerminalRuleCall_2_0; }
		
		//Predict_diabetes = Predict_diabetes
		public Assignment getPredict_diabetesAssignment_3() { return cPredict_diabetesAssignment_3; }
		
		//Predict_diabetes
		public RuleCall getPredict_diabetesPredict_diabetesParserRuleCall_3_0() { return cPredict_diabetesPredict_diabetesParserRuleCall_3_0; }
	}
	
	
	private final Diabetes_Prediction_SystemElements pDiabetes_Prediction_System;
	private final MedicinesElements pMedicines;
	private final SymptomElements pSymptom;
	private final PolyuriaElements pPolyuria;
	private final PolydipsiaElements pPolydipsia;
	private final Sudden_weight_lossElements pSudden_weight_loss;
	private final PolyphagiaElements pPolyphagia;
	private final Genital_thrushElements pGenital_thrush;
	private final Visual_blurringElements pVisual_blurring;
	private final ItchingElements pItching;
	private final IrritabilityElements pIrritability;
	private final Delayed_healingElements pDelayed_healing;
	private final Partial_paresisElements pPartial_paresis;
	private final Muscle_stiffnessElements pMuscle_stiffness;
	private final AlopeciaElements pAlopecia;
	private final ObesityElements pObesity;
	private final Sugar_TestElements pSugar_Test;
	private final DoctorElements pDoctor;
	private final PatientElements pPatient;
	private final Predict_diabetesElements pPredict_diabetes;
	private final Machine_learning_AlgorithmsElements pMachine_learning_Algorithms;
	private final Random_forestElements pRandom_forest;
	private final SVM_ClassifierElements pSVM_Classifier;
	private final J48ClassifierElements pJ48Classifier;
	private final NavieBayesElements pNavieBayes;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pDiabetes_Prediction_System = new Diabetes_Prediction_SystemElements();
		this.pMedicines = new MedicinesElements();
		this.pSymptom = new SymptomElements();
		this.pPolyuria = new PolyuriaElements();
		this.pPolydipsia = new PolydipsiaElements();
		this.pSudden_weight_loss = new Sudden_weight_lossElements();
		this.pPolyphagia = new PolyphagiaElements();
		this.pGenital_thrush = new Genital_thrushElements();
		this.pVisual_blurring = new Visual_blurringElements();
		this.pItching = new ItchingElements();
		this.pIrritability = new IrritabilityElements();
		this.pDelayed_healing = new Delayed_healingElements();
		this.pPartial_paresis = new Partial_paresisElements();
		this.pMuscle_stiffness = new Muscle_stiffnessElements();
		this.pAlopecia = new AlopeciaElements();
		this.pObesity = new ObesityElements();
		this.pSugar_Test = new Sugar_TestElements();
		this.pDoctor = new DoctorElements();
		this.pPatient = new PatientElements();
		this.pPredict_diabetes = new Predict_diabetesElements();
		this.pMachine_learning_Algorithms = new Machine_learning_AlgorithmsElements();
		this.pRandom_forest = new Random_forestElements();
		this.pSVM_Classifier = new SVM_ClassifierElements();
		this.pJ48Classifier = new J48ClassifierElements();
		this.pNavieBayes = new NavieBayesElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("assignment_2_ssda.xtext_ml.ass2.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Diabetes_Prediction_System: 'Diabetes_prediction_System:'  name =ID
	// medicines += Medicines*
	// symptom +=Symptom*
	// doctors += Doctor*
	// patient += Patient*
	// Machine_learning_Algorithms += Machine_learning_Algorithms+
	//;
	public Diabetes_Prediction_SystemElements getDiabetes_Prediction_SystemAccess() {
		return pDiabetes_Prediction_System;
	}
	
	public ParserRule getDiabetes_Prediction_SystemRule() {
		return getDiabetes_Prediction_SystemAccess().getRule();
	}
	
	//Medicines: 'Medicines' Medicine_name = ID
	//     'Medicine_dossage:' Medicine_dossage = STRING
	//;
	public MedicinesElements getMedicinesAccess() {
		return pMedicines;
	}
	
	public ParserRule getMedicinesRule() {
		return getMedicinesAccess().getRule();
	}
	
	//Symptom: Polyuria | Polydipsia |sudden_weight_loss | Polyphagia | Genital_thrush | visual_blurring | Itching | Irritability | delayed_healing | partial_paresis
	//    | muscle_stiffness | Alopecia | Obesity
	//    ;
	public SymptomElements getSymptomAccess() {
		return pSymptom;
	}
	
	public ParserRule getSymptomRule() {
		return getSymptomAccess().getRule();
	}
	
	//Polyuria: 'Polyuria'
	//     'name:' name=ID
	//;
	public PolyuriaElements getPolyuriaAccess() {
		return pPolyuria;
	}
	
	public ParserRule getPolyuriaRule() {
		return getPolyuriaAccess().getRule();
	}
	
	//Polydipsia: 'Polydipsia'
	//     'name:' name=ID
	//;
	public PolydipsiaElements getPolydipsiaAccess() {
		return pPolydipsia;
	}
	
	public ParserRule getPolydipsiaRule() {
		return getPolydipsiaAccess().getRule();
	}
	
	//sudden_weight_loss: 'sudden_weight_loss'
	//    'name:' name=ID
	//;
	public Sudden_weight_lossElements getSudden_weight_lossAccess() {
		return pSudden_weight_loss;
	}
	
	public ParserRule getSudden_weight_lossRule() {
		return getSudden_weight_lossAccess().getRule();
	}
	
	//Polyphagia: 'Polyphagia'
	//    'name:' name=ID
	//  ;
	public PolyphagiaElements getPolyphagiaAccess() {
		return pPolyphagia;
	}
	
	public ParserRule getPolyphagiaRule() {
		return getPolyphagiaAccess().getRule();
	}
	
	//Genital_thrush: 'Genital_thrush'
	//    'name:' name=ID
	//;
	public Genital_thrushElements getGenital_thrushAccess() {
		return pGenital_thrush;
	}
	
	public ParserRule getGenital_thrushRule() {
		return getGenital_thrushAccess().getRule();
	}
	
	//visual_blurring: 'visual_blurring'
	//    'name:' name=ID
	//;
	public Visual_blurringElements getVisual_blurringAccess() {
		return pVisual_blurring;
	}
	
	public ParserRule getVisual_blurringRule() {
		return getVisual_blurringAccess().getRule();
	}
	
	//Itching: 'Itching'
	//        'name:' name=ID
	//;
	public ItchingElements getItchingAccess() {
		return pItching;
	}
	
	public ParserRule getItchingRule() {
		return getItchingAccess().getRule();
	}
	
	//Irritability: 'Irritability'
	//       'name:' name=ID
	//;
	public IrritabilityElements getIrritabilityAccess() {
		return pIrritability;
	}
	
	public ParserRule getIrritabilityRule() {
		return getIrritabilityAccess().getRule();
	}
	
	//delayed_healing: 'delayed_healing'
	//       'name:' name=ID
	//;
	public Delayed_healingElements getDelayed_healingAccess() {
		return pDelayed_healing;
	}
	
	public ParserRule getDelayed_healingRule() {
		return getDelayed_healingAccess().getRule();
	}
	
	//partial_paresis: 'partial_paresis'
	//       'name:' name=ID
	//;
	public Partial_paresisElements getPartial_paresisAccess() {
		return pPartial_paresis;
	}
	
	public ParserRule getPartial_paresisRule() {
		return getPartial_paresisAccess().getRule();
	}
	
	//muscle_stiffness: 'muscle_stiffness'
	//       'name:' name=ID
	//;
	public Muscle_stiffnessElements getMuscle_stiffnessAccess() {
		return pMuscle_stiffness;
	}
	
	public ParserRule getMuscle_stiffnessRule() {
		return getMuscle_stiffnessAccess().getRule();
	}
	
	//Alopecia: 'Alopecia'
	//       'name:' name=ID
	//;
	public AlopeciaElements getAlopeciaAccess() {
		return pAlopecia;
	}
	
	public ParserRule getAlopeciaRule() {
		return getAlopeciaAccess().getRule();
	}
	
	//Obesity: 'Obesity'
	//       'name:' name=ID
	//;
	public ObesityElements getObesityAccess() {
		return pObesity;
	}
	
	public ParserRule getObesityRule() {
		return getObesityAccess().getRule();
	}
	
	//Sugar_Test: 'Sugar_test'
	//      'Previous_blood_sugar' Previous_blood_sugar=STRING
	//      'Current_blood_sugar'  Current_blood_sugar=STRING
	//;
	public Sugar_TestElements getSugar_TestAccess() {
		return pSugar_Test;
	}
	
	public ParserRule getSugar_TestRule() {
		return getSugar_TestAccess().getRule();
	}
	
	//Doctor: 'Doctor' name=ID
	//      'Doctor_specailization' Doctor_specailization = STRING
	//       medicines += Medicines*
	//       symptoms  += Symptom*
	//;
	public DoctorElements getDoctorAccess() {
		return pDoctor;
	}
	
	public ParserRule getDoctorRule() {
		return getDoctorAccess().getRule();
	}
	
	//Patient: 'Patient' name =ID
	//        'Patient_Gender' Patient_Gender= ID
	//        'Patient_Age' Patient_Age= INT
	//        'Patient_Height' Patient_Height= STRING
	//         'Patient_Weight' Patient_Weight= STRING
	//        'patients_blood_pressure' patient_blood_pressure= INT
	//         'pulse_rate' pulse_rate=INT
	//         symptoms +=Symptom+
	//         medicines += Medicines*
	//         sugar_tests +=Sugar_Test+
	//         'doctor' DOCTORS += [Doctor]+
	//;
	public PatientElements getPatientAccess() {
		return pPatient;
	}
	
	public ParserRule getPatientRule() {
		return getPatientAccess().getRule();
	}
	
	//Predict_diabetes :'Predict_diabetes' name=INT
	//;
	public Predict_diabetesElements getPredict_diabetesAccess() {
		return pPredict_diabetes;
	}
	
	public ParserRule getPredict_diabetesRule() {
		return getPredict_diabetesAccess().getRule();
	}
	
	//Machine_learning_Algorithms:  Random_forest | SVM_Classifier|J48Classifier |NavieBayes
	//;
	public Machine_learning_AlgorithmsElements getMachine_learning_AlgorithmsAccess() {
		return pMachine_learning_Algorithms;
	}
	
	public ParserRule getMachine_learning_AlgorithmsRule() {
		return getMachine_learning_AlgorithmsAccess().getRule();
	}
	
	//Random_forest: 'Random_forest'
	//        'create_trees' create_trees=STRING
	//         Predict_diabetes = Predict_diabetes
	//;
	public Random_forestElements getRandom_forestAccess() {
		return pRandom_forest;
	}
	
	public ParserRule getRandom_forestRule() {
		return getRandom_forestAccess().getRule();
	}
	
	//SVM_Classifier: 'SVM_Classifier'
	//        'kernel:' Kernel=STRING
	//        Predict_diabetes = Predict_diabetes
	//;
	public SVM_ClassifierElements getSVM_ClassifierAccess() {
		return pSVM_Classifier;
	}
	
	public ParserRule getSVM_ClassifierRule() {
		return getSVM_ClassifierAccess().getRule();
	}
	
	//J48Classifier: 'J48Classifier'
	//        'set_pruned_trees:' set_pruned_trees = STRING
	//        Predict_diabetes = Predict_diabetes
	//;
	public J48ClassifierElements getJ48ClassifierAccess() {
		return pJ48Classifier;
	}
	
	public ParserRule getJ48ClassifierRule() {
		return getJ48ClassifierAccess().getRule();
	}
	
	//NavieBayes: 'NavieBayes'
	//        'Conditional_Probability_based:' Conditional_Probability_based = STRING
	//        Predict_diabetes = Predict_diabetes
	//;
	public NavieBayesElements getNavieBayesAccess() {
		return pNavieBayes;
	}
	
	public ParserRule getNavieBayesRule() {
		return getNavieBayesAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
